package rules.Ava;

import com.mindsmiths.ruleEngine.util.Log;
import com.mindsmiths.employeeManager.employees.Employee;
import com.mindsmiths.sdk.utils.Utils;
import com.mindsmiths.ruleEngine.util.Agents;
import signals.EmployeeUpdateSignal;
import agents.CultureMaster;
import agents.Ava;
import models.OnboardingStage;


rule "Create new employee"
    when
        newEmployee: Employee() from entry-point "signals"
        agent: Ava(onboardingStage == null)
    then
        delete(newEmployee);
        // TODO: send email method with `?trigger=start-onboarding
        modify(agent) {
            addConnection("email", newEmployee.getEmail()),
            addConnection("armory", Utils.randomGenerator())
        };
        insert(newEmployee);
        agent.send(CultureMaster.ID, new EmployeeUpdateSignal(newEmployee));
end

rule "Update existing employee"
    when
        newEmployee: Employee() from entry-point "signals"
        oldEmployee: Employee()
        agent: Ava(onboardingStage != null)
    then
        delete(oldEmployee);
        delete(newEmployee);
        modify(agent) {addConnection("email", newEmployee.getEmail())};
        insert(newEmployee);
        agent.send(CultureMaster.ID, new EmployeeUpdateSignal(newEmployee));
end