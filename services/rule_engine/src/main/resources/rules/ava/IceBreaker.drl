package rules.ava;

import models.OnboardingStage;
import com.mindsmiths.pairingalgorithm.Days;
import com.mindsmiths.armory.events.SubmitEvent;
import agents.Ava;
import agents.CultureMaster;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import models.OnboardingStage;
import signals.AllEmployees;
import models.AvaLunchCycleStage;

import signals.EmployeeAvailabilitySignal;
import signals.EmployeeUpdateSignal;

import models.EmployeeProfile;
import models.OnboardingStage; 


rule "Show guessing quiz"
    when
        signal: UserConnectedEvent(getParamAsString("trigger") == "ice-breaker") from entry-point "signals"
        agent: Ava()
    then
        agent.guessingQuizScreen();
        delete(signal);
end

rule "Finish guessing quiz"
    when
        signal: SubmitEvent(getParamAsString("submit") == "finish-guessing-quiz") from entry-point "signals"
        agent: Ava()
    then
        Map<String, String> personalGuess = new HashMap<>();
        String questionId = "";
        String answer = "";
        String prefix = "guess--";
        for (String paramId : signal.getParams().keySet())
            if (paramId.startsWith(prefix)) {
                questionId = paramId.substring(prefix.length());
                answer = ((HashMap<String,String>) signal.getParams().get(paramId)).get("text");
                personalGuess.put(
                    questionId, answer
                );
            }

        modify(agent) {
            setPersonalGuess(personalGuess)
        };
        agent.correctness();
        agent.showResultsScreen();
        delete(signal);
end